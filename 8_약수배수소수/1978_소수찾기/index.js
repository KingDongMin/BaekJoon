const fs = require('fs');
const input = fs.readFileSync('example_input.txt').toString().trim().split('\n');

/**
 * [ 1978 - 소수 찾기 ]
 *  
 * - 주어진 N개의 수에서 소수가 몇 개인지 구하시오.
 * - 100이하의 수가 주어지고 1000이하의 자연수를 갖는다.
 */

/**
 * [ 해결 방안 ]
 * - 자연수 X를 1부터 X까지 나눴을때 나머지가 0인 수를 약수로 구하고 자연수 X의 약수가 1과 X만 있을때 소수로 판별한다.
 */



/**
 * [ 풀이 과정 ]
 * 1. 입력된 자연수들을 배열로 초기화한다.
 * 2. 자연수 배열에서 소수의 갯수를 세기위해 count변수를 초기화한다.
 * 3. for..of.. 로 자연수 배열의 각 자연수를 조회한다.
 * 4. 해당 자연수의 약수를 담을 arr2를 초기화한다.
 * 5. 이중 for문을 통해 1부터 해당 자연수까지 나눈다.
 * 6. 나눴을때 나머지가 0인 경우 약수이므로 arr2에 push한다.
 * 7. 해당 자연수의 약수가 담긴 배열에서 길이가 2인 경우에만 count를 증가한다. (소수의 약수는 1과 자기 자신이다. )
 * 8. 소수의 갯수 count를 출력한다.
 * 
 */

const arr = input[1].split(' ').map(el=>+el) // 입력된 자연수 배열

let count = 0; // 소수 갯수

for( el of arr){ //배열에 각 자연수 조회
    
    let arr2 = [] // 각 자연수의 약수

    for(let i = 1 ; i <= el ; i++){ // 1부터 해당 자연수까지 
        if(el % i == 0){ // 나머지가 0인경우 약수 판별
            arr2.push(i) // 약수 추가
        }
    }
    if(arr2.length == 2){ // 해당 자연수의 약수 갯수가 2인 경우 == 소수
        count++
    }
}

console.log(count)

/**
 * [ 리뷰 ]
 * - 1부터 자연수 X까지 나누어 소수를 구하지 않고 간단히 구할 수 있는 방법을 뭘까?
 */